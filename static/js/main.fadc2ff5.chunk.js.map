{"version":3,"sources":["Contacts/ContactsList.module.css","Filter/Filter.module.css","App.module.css","Form/Form.module.css","Redux/Counter/counter-operation.js","Form/Form.js","Contacts/ContactListItem.js","Contacts/ContactsList.js","Redux/Counter/counter-action.js","Filter/Filter.js","App.js","Redux/Counter/counter-reducer.js","Redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","data","deleteContact","contactId","delete","id","addContact","name","phone","number","contact","post","Form","useState","setName","setNumber","contacts","useSelector","state","items","dispatch","useDispatch","handleChange","e","currentTarget","value","handleClick","find","alert","handleAddContact","className","styles","form_contact","form_label","onChange","input_contact","type","pattern","title","required","btn_contact","onClick","ContactListItem","map","contact_item","contact_btn","ContactList","filter","loading","useEffect","color","height","width","timeout","contact_list","normalizeFilter","toLowerCase","includes","foundContacts","changeFilter","createAction","Filter","filter_box","filter_label","input_filter","App","createReducer","fulfilled","_","payload","pending","rejected","error","persistConfig","key","storage","reducer","combineReducers","persistedReducer","persistReducer","store","configureStore","devTools","process","middleware","thunk","logger","persist","persistStore","ReactDOM","render","StrictMode","persistor","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,aAAe,mCAAmC,aAAe,mCAAmC,YAAc,oC,mBCApID,EAAOC,QAAU,CAAC,aAAe,6BAA6B,aAAe,+B,mBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB,kBCAxBD,EAAOC,QAAU,CAAC,aAAe,2BAA2B,WAAa,yBAAyB,cAAgB,4BAA4B,YAAc,0BAA0B,aAAe,6B,2JCErMC,IAAMC,SAASC,QAAU,8CAElB,IAAMC,EAAgBC,YAC3B,yBAD2C,sBAE3C,8BAAAC,EAAA,sEACyBL,IAAMM,IAAI,aADnC,uBACUC,EADV,EACUA,KADV,kBAESA,GAFT,4CAMWC,EAAgBJ,YAC3B,yBAD2C,uCAE3C,WAAMK,GAAN,iBAAAJ,EAAA,sEAGYL,IAAMU,OAAN,oBAA0BD,IAHtC,uBAEYE,EAFZ,EAEIJ,KAAQI,GAFZ,kBAISA,GAJT,2CAF2C,uDAUhCC,EAAaR,YACxB,sBADwC,uCAExC,qCAAAC,EAAA,6DAASQ,EAAT,EAASA,KAAcC,EAAvB,EAAeC,OACPC,EAAU,CAAEH,OAAMC,SAD1B,SAGyBd,IAAMiB,KAAK,YAAaD,GAHjD,uBAGUT,EAHV,EAGUA,KAHV,kBAISA,GAJT,2CAFwC,uD,OCkE3BW,MAnFf,WACE,MAAwBC,mBAAS,IAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOJ,EAAP,KAAeM,EAAf,KACMC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,SAASG,SACjDC,EAAWC,cAgBjB,SAASC,EAAaC,GACpB,MAAwBA,EAAEC,cAAlBjB,EAAR,EAAQA,KAAMkB,EAAd,EAAcA,MACd,OAAQlB,GACN,IAAK,OACHO,EAAQW,GACR,MACF,IAAK,SACHV,EAAUU,GACV,MACF,QACE,QAIN,SAASC,KA5BT,SAA0BnB,EAAME,GAE5BO,EAASW,MAAK,SAACjB,GACb,OAAOA,EAAQH,OAASA,GAAQG,EAAQD,SAAWA,KAG9CmB,MAAM,GAAD,OAAIrB,EAAJ,4BAED,KAATA,GAA0B,KAAXE,EAAsBmB,MAAM,6BAE7CR,EAASd,EAAW,CAAEC,OAAME,YAmB9BoB,CAAiBtB,EAAME,GAKvBK,EAAQ,IACRC,EAAU,IAGZ,OACE,uBAAMe,UAAWC,IAAOC,aAAxB,UACE,wBAAOF,UAAWC,IAAOE,WAAzB,iBAEE,uBACEC,SAAUZ,EACVG,MAAOlB,EACPuB,UAAWC,IAAOI,cAClBC,KAAK,OACL7B,KAAK,OACL8B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAOT,UAAWC,IAAOE,WAAzB,mBAEE,uBACEC,SAAUZ,EACVG,MAAOhB,EACPqB,UAAWC,IAAOI,cAClBC,KAAK,MACL7B,KAAK,SACL8B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBACEH,KAAK,SACLN,UAAWC,IAAOS,YAClBC,QAAS,kBAAIf,KAHf,6B,iBCzEAgB,EAAkB,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SACnBI,EAAWC,cACf,OAAOL,EAAS2B,KAAI,YAAsB,IAApBtC,EAAmB,EAAnBA,GAAGE,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MAC3B,OACH,qBAAasB,UAAWC,IAAOa,aAA/B,UACE,+BAAOrC,IADT,KACuB,+BAAOC,IAC5B,wBAAQsB,UAAWC,IAAOc,YAAaJ,QAAS,kBAAKrB,EAASlB,EAAcG,KAA5E,sBAFOA,O,yBCuCEyC,EAtCK,WAClB,IAAM9B,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,SAASG,SACjD4B,EAAS9B,aAAY,SAACC,GAAD,OAAWA,EAAMF,SAAS+B,UAC/CC,EAAU/B,aAAY,SAACC,GAAD,OAAWA,EAAMF,SAASgC,WAChD5B,EAAWC,cAYjB,OAVA4B,qBAAU,kBAAM7B,EAASvB,OAAkB,CAACuB,IAW1C,mCACG4B,EACC,cAAC,IAAD,CACEZ,KAAK,OACLc,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAGX,oBAAIvB,UAAWC,IAAOuB,aAAtB,SACE,cAAC,EAAD,CAAiBtC,SApBzB,WACE,IAAMuC,EAAkBR,EAAOS,cAC/B,GAAIxC,EACF,OAAOA,EAAS+B,QAAO,SAACrC,GACtB,OAAOA,EAAQH,KAAKiD,cAAcC,SAASF,MAgBdG,U,iBCpCxBC,EAAeC,YAAa,yBC0B1BC,EAvBA,WACb,IAAMd,EAAS9B,aAAY,SAACC,GAAD,OAAWA,EAAMF,SAAS+B,UAC/C3B,EAAWC,cAMjB,OACE,qBAAKS,UAAWC,IAAO+B,WAAvB,SACE,wBAAOhC,UAAWC,IAAOgC,aAAzB,kCAEE,uBACE7B,SATR,SAAsBX,GACpB,IAAQE,EAAUF,EAAEC,cAAZC,MACRL,EAASuC,EAAalC,KAQhBA,MAAOsB,EACPjB,UAAWC,IAAOiC,aAClB5B,KAAK,e,iBCJA6B,I,MAAAA,EAZf,WACE,OACE,sBAAKnC,UAAWC,IAAOkC,IAAvB,UACI,2CACA,cAAC,EAAD,IACA,oBAAInC,UAAU,gBAAd,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,uDCHKX,EAAQ+C,YAAc,IAAD,mBAC/BrE,EAAcsE,WAAY,SAACC,EAAD,YAAMC,WADD,cAE/B/D,EAAW6D,WAAY,SAACjD,EAAD,OAAUmD,EAAV,EAAUA,QAAV,4BAA4BnD,GAA5B,CAAmCmD,OAF3B,cAG/BnE,EAAciE,WAAY,SAACjD,EAAD,OAAUmD,EAAV,EAAUA,QAAV,OACzBnD,EAAM6B,QAAO,qBAAG1C,KAAgBgE,QAJF,IAOrBrB,EAAUkB,aAAc,GAAD,mBACjCrE,EAAcyE,SAAU,kBAAM,KADG,cAEjCzE,EAAcsE,WAAY,kBAAM,KAFC,cAGjCtE,EAAc0E,UAAW,kBAAM,KAHE,cAIjCjE,EAAWgE,SAAU,kBAAM,KAJM,cAKjChE,EAAW6D,WAAY,kBAAM,KALI,cAMjC7D,EAAWiE,UAAW,kBAAM,KANK,cAOjCrE,EAAcoE,SAAU,kBAAM,KAPG,cAQjCpE,EAAciE,WAAY,kBAAM,KARC,cASjCjE,EAAcqE,UAAW,kBAAM,KATE,IAYvBxB,EAASmB,YAAc,GAAD,eAChCP,GAAe,SAACS,EAAD,YAAMC,YAGXG,EAAQN,YAAc,MAAD,mBAC/BrE,EAAc0E,UAAW,SAACH,EAAD,YAAMC,WADA,cAE/BxE,EAAcsE,WAAY,kBAAM,QAFD,cAG/B7D,EAAWiE,UAAW,SAACH,EAAD,YAAMC,WAHG,cAI/B/D,EAAW6D,WAAY,kBAAM,QAJE,cAK/BjE,EAAcqE,UAAW,SAACH,EAAD,YAAMC,WALA,cAM/BnE,EAAciE,WAAY,kBAAM,QAND,I,iBCxB5BM,EAAgB,CACpBC,IAAK,OACLC,aAGIC,EAAUC,YAAgB,CAC9B1D,QACA4B,SACAC,UACAwB,UAGIM,EAAmBC,YAAeN,EAAeG,GAE1CI,GAAQC,YAAe,CAClCL,QAAS,CACP5D,SAAU8D,GAEZI,UAAUC,EACVC,WAAY,CAACC,IAAOC,O,SCnBlBC,GAAUC,YAAaR,IAE3BS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAahC,QAAS,KAAM4C,UAAWL,GAAvC,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,W","file":"static/js/main.fadc2ff5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactsList_contact_list__3WG-P\",\"contact_item\":\"ContactsList_contact_item__3nGsr\",\"contact_btn\":\"ContactsList_contact_btn__2g1Ur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__6pX8v\",\"input_filter\":\"Filter_input_filter__orLYS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__NZbBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_contact\":\"Form_form_contact__2kgcA\",\"form_label\":\"Form_form_label__PSG3S\",\"input_contact\":\"Form_input_contact__17uTy\",\"btn_contact\":\"Form_btn_contact__3PmST\",\"filter_label\":\"Form_filter_label__12L3W\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61be02002a1dd4001708a201.mockapi.io';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async () => {\r\n    const { data } = await axios.get('/contacts');\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async contactId => {\r\n    const {\r\n      data: { id }\r\n    } = await axios.delete(`/contacts/${contactId}`);\r\n    return id;\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async ({ name, number: phone }) => {\r\n    const contact = { name, phone };\r\n\r\n    const { data } = await axios.post('/contacts', contact);\r\n    return data;\r\n  }\r\n);","import { useState } from \"react\";\nimport styles from \"./Form.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"../Redux/Counter/counter-operation\";\n\nfunction Form() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector((state) => state.contacts.items);\n  const dispatch = useDispatch();\n\n  function handleAddContact(name, number) {\n    if (\n      contacts.find((contact) => {\n        return contact.name === name || contact.number === number;\n      })\n    )\n      return alert(`${name} is already in contacts`);\n\n    if (name === \"\" || number === \"\") return alert(\"Please enter correct name\");\n    else {\n      dispatch(addContact({ name, number }));\n    }\n  }\n\n  function handleChange(e) {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  }\n\n  function handleClick() {\n    handleAddContact(name, number);\n    resetState();\n  }\n\n  function resetState() {\n    setName(\"\");\n    setNumber(\"\");\n  }\n\n  return (\n    <form className={styles.form_contact}>\n      <label className={styles.form_label}>\n        Name\n        <input\n          onChange={handleChange}\n          value={name}\n          className={styles.input_contact}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={styles.form_label}>\n        Number\n        <input\n          onChange={handleChange}\n          value={number}\n          className={styles.input_contact}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button\n        type=\"button\"\n        className={styles.btn_contact}\n        onClick={()=>handleClick()}\n      >\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactsList.module.css\"\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../Redux/Counter/counter-operation\";\n\nconst ContactListItem = ({ contacts }) => {\n  const dispatch = useDispatch()\n    return contacts.map(({id,name,phone}) => {\n       return (\n    <li key={id} className={styles.contact_item}>\n      <span>{name}</span>: <span>{phone}</span>\n      <button className={styles.contact_btn} onClick={()=> dispatch(deleteContact(id))}>\n        Delete\n      </button>\n    </li>\n  );\n   })\n  };\n\nContactListItem.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.node.isRequired,\n        name: PropTypes.string.isRequired,\n        phone: PropTypes.string.isRequired\n    })),\n}\n\n\nexport { ContactListItem };\n","import PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\nimport { ContactListItem } from \"./ContactListItem\";\nimport styles from \"./ContactsList.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"../Redux/Counter/counter-operation\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nconst ContactList = () => {\n  const contacts = useSelector((state) => state.contacts.items);\n  const filter = useSelector((state) => state.contacts.filter);\n  const loading = useSelector((state) => state.contacts.loading);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  function foundContacts() {\n    const normalizeFilter = filter.toLowerCase();\n    if (contacts) {\n      return contacts.filter((contact) => {\n        return contact.name.toLowerCase().includes(normalizeFilter);\n      });\n    }\n  }\n  return (\n    <>\n      {loading ? (\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000} //3 secs\n        />\n      ) : (\n        <ul className={styles.contact_list}>\n          <ContactListItem contacts={foundContacts()} />\n        </ul>\n      )}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object.isRequired),\n};\nexport default ContactList;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import styles from \"./Filter.module.css\";\nimport { useSelector } from \"react-redux\";\nimport {changeFilter} from \"../Redux/Counter/counter-action\";\nimport { useDispatch } from \"react-redux\";\n\nconst Filter = () => {\n  const filter = useSelector((state) => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  function handleFilter(e) {\n    const { value } = e.currentTarget;\n    dispatch(changeFilter(value));\n  }\n  return (\n    <div className={styles.filter_box}>\n      <label className={styles.filter_label}>\n        Find contacts by name\n        <input\n          onChange={handleFilter}\n          value={filter}\n          className={styles.input_filter}\n          type=\"text\"\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import Form from \"./Form/Form.js\";\nimport ContactList from \"./Contacts/ContactsList\";\nimport Filter from \"./Filter/Filter\";\nimport styles from \"./App.module.css\";\n\nfunction App() {\n  return (\n    <div className={styles.App}>\n        <h1>Phonebook</h1>\n        <Form />\n        <h2 className=\"contact_title\">Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n  );\n}\n\nexport default App;\n","import { createReducer} from '@reduxjs/toolkit';\nimport { changeFilter } from './counter-action';\n\nimport {\n  fetchContacts,\n  deleteContact,\n  addContact,\n} from './counter-operation.js';\n\nexport const items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport const loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nexport const filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport const error = createReducer(null, {\n  [fetchContacts.rejected]: (_, { payload }) => payload,\n  [fetchContacts.fulfilled]: () => null,\n  [addContact.rejected]: (_, { payload }) => payload,\n  [addContact.fulfilled]: () => null,\n  [deleteContact.rejected]: (_, { payload }) => payload,\n  [deleteContact.fulfilled]: () => null,\n});\n\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer } from \"redux-persist\";\nimport { combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {items, filter, loading, error} from \"./Counter/counter-reducer\";\nimport logger from \"redux-logger\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst reducer = combineReducers({\n  items,\n  filter,\n  loading,\n  error\n});\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistedReducer,\n  },\n  devTools: process.env.NODE_ENV !== \"production\",\n  middleware: [thunk, logger],\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './Redux/store'\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\n\nlet persist = persistStore(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persist}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}